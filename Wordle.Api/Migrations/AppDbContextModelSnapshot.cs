// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Wordle.Api.Data;

#nullable disable

namespace Wordle.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Wordle.Api.Data.Player", b =>
                {
                    b.Property<int>("PlayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlayerId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PlayerId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("Wordle.Api.Data.PlayerWord", b =>
                {
                    b.Property<int>("PlayerWordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlayerWordId"), 1L, 1);

                    b.Property<DateTimeOffset?>("DateEnded")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("DateStarted")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<int>("WordId")
                        .HasColumnType("int");

                    b.HasKey("PlayerWordId");

                    b.HasIndex("PlayerId");

                    b.HasIndex("WordId");

                    b.ToTable("PlayerWords");
                });

            modelBuilder.Entity("Wordle.Api.Data.PlayerWordGuess", b =>
                {
                    b.Property<int>("PlayerWordGuessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlayerWordGuessId"), 1L, 1);

                    b.Property<string>("Guess")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("GuessDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("GuessIsCorrect")
                        .HasColumnType("bit");

                    b.Property<int>("GuessNumber")
                        .HasColumnType("int");

                    b.Property<int>("PlayerWordId")
                        .HasColumnType("int");

                    b.HasKey("PlayerWordGuessId");

                    b.HasIndex("PlayerWordId");

                    b.ToTable("PlayerWordGuesss");
                });

            modelBuilder.Entity("Wordle.Api.Data.ScoreStat", b =>
                {
                    b.Property<int>("ScoreStatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScoreStatId"), 1L, 1);

                    b.Property<int>("AverageSeconds")
                        .HasColumnType("int");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<int>("TotalGames")
                        .HasColumnType("int");

                    b.HasKey("ScoreStatId");

                    b.ToTable("ScoreStats");
                });

            modelBuilder.Entity("Wordle.Api.Data.Word", b =>
                {
                    b.Property<int>("WordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WordId"), 1L, 1);

                    b.Property<string>("Letters")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WordId");

                    b.ToTable("Words");
                });

            modelBuilder.Entity("Wordle.Api.Data.PlayerWord", b =>
                {
                    b.HasOne("Wordle.Api.Data.Player", "Player")
                        .WithMany("PlayerWords")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Wordle.Api.Data.Word", "Word")
                        .WithMany("PlayerWords")
                        .HasForeignKey("WordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");

                    b.Navigation("Word");
                });

            modelBuilder.Entity("Wordle.Api.Data.PlayerWordGuess", b =>
                {
                    b.HasOne("Wordle.Api.Data.PlayerWord", "PlayerWord")
                        .WithMany("PlayerWordGuesses")
                        .HasForeignKey("PlayerWordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlayerWord");
                });

            modelBuilder.Entity("Wordle.Api.Data.Player", b =>
                {
                    b.Navigation("PlayerWords");
                });

            modelBuilder.Entity("Wordle.Api.Data.PlayerWord", b =>
                {
                    b.Navigation("PlayerWordGuesses");
                });

            modelBuilder.Entity("Wordle.Api.Data.Word", b =>
                {
                    b.Navigation("PlayerWords");
                });
#pragma warning restore 612, 618
        }
    }
}
